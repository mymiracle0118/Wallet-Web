interface errorTypes {
  [key: string]: string
}

const errorCoders: errorTypes = {
  UNKNOWN_ERROR: 'There is no way for network to know what the underlying problem is',
  UNSUPPORTED_OPERATION: 'The attempted operation is not supported',
  NETWORK_ERROR: 'Problem connecting to a network',
  BAD_DATA: 'Provided set of data cannot be correctly interpreted',
  CANCELLED: 'The operation was cancelled by a programmatic call',
  BUFFER_OVERRUN: 'An attempt was made to read outside the bounds of protected data',
  NUMERIC_FAULT: 'An operation which would result in incorrect arithmetic output has occurred',
  CALL_EXCEPTION: 'Transaction reverted',
  REPLACEMENT_UNDERPRICED:
    'An attempt was made to replace a transaction, but with an insufficient additional fee to afford evicting the old transaction from the memory pool',
  TRANSACTION_REPLACED: 'A pending transaction was replaced by another',
  UNCONFIGURED_NAME: 'An ENS name was used, but the name has not been configured',
  OFFCHAIN_FAULT: 'A CCIP-read exception, which cannot be recovered from or be further processed',
  ACTION_REJECTED: 'This Error indicates a request was rejected by the user',
  INSUFFICIENT_FUNDS: 'Insufficient balance for transaction fee',
  ERR_BAD_RESPONSE: 'Request failed with status code 500',
  NONCE_EXPIRED: 'Transaction already completed',
  INVALID_ARGUMENT: 'Invalid address',
  ECONNABORTED: 'Timeout limit exceeded',
  MISSING_ARGUMENT: 'Missing argument',
  UNEXPECTED_ARGUMENT: 'Unexpected argument',
  INVALID_TRANSACTION: 'Invalid transaction',
  INSUFFICIENT_TX_FEE: 'Insufficient transaction fee',
  STATIC_CALL_FAILED: 'Static call failed',
  GAS_ESTIMATE: 'Gas estimate failed',
  UNPREDICTABLE_GAS_LIMIT: 'Gas limit estimation failed',
  UNPREDICTABLE_GAS_PRICE: 'Gas price estimation failed',
  INVALID_NETWORK: 'Invalid network',
  INVALID_RPC_RESPONSE: 'Invalid RPC response',
  TRANSACTION_FAILED: 'Transaction failed',
  TIMEOUT: 'Operation timed out',
  CLIENT_ERROR: 'Client error',
  SERVER_ERROR: 'Server error',
  RATE_LIMIT: 'Rate limit exceeded',
  PROVIDER_ERROR: 'Provider error',
  MISSING_RATE_LIMIT_HEADER: 'Missing rate limit header',
  INSUFFICIENT_POLLING: 'Insufficient polling',
  JSON_RPC_REQUEST_FAILED: 'JSON RPC request failed',
  CONNECTION_TIMEOUT: 'Connection timeout',
  POOR_RESPONSE_TIME: 'Poor response time',
  INSUFFICIENT_DATA: 'Insufficient data',
  QUERY_RESPONDED_WITH_ERROR: 'Query responded with error',
  NO_RELAY_SET: 'No relay set',

  UNKNOWN_VALIDATION_STATUS: 'Transaction status determination error',
  INVALID_SIGNATURE: 'Invalid transaction signature',
  INVALID_AUTH_KEY: 'Bad account authentication key',
  SEQUENCE_NUMBER_TOO_OLD: 'Outdated sequence number',
  SEQUENCE_NUMBER_TOO_NEW: 'New sequence number',
  INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE: 'Insufficient balance for transaction fee',
  TRANSACTION_EXPIRED: 'Expired transaction',
  SENDING_ACCOUNT_DOES_NOT_EXIST: 'Non-existent sending account',
  REJECTED_WRITE_SET: 'Write set transaction rejected',
  INVALID_WRITE_SET: 'Invalid write set transaction',
  EXCEEDED_MAX_TRANSACTION_SIZE: 'Transaction size exceeds limit',
  UNKNOWN_SCRIPT: 'Unknown script error',
  UNKNOWN_MODULE: 'Attempt to publish a new module',
  MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND: 'Max gas units exceed VM limit',
  MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS: 'Max gas units below transaction cost',
  GAS_UNIT_PRICE_BELOW_MIN_BOUND: 'Gas unit price below minimum set in VM',
  GAS_UNIT_PRICE_ABOVE_MAX_BOUND: 'Gas unit price above maximum set in VM',
  INVALID_GAS_SPECIFIER: 'Invalid gas specifier',
  SENDING_ACCOUNT_FROZEN: 'Frozen sending account',
  UNABLE_TO_DESERIALIZE_ACCOUNT: 'Account deserialization error',
  CURRENCY_INFO_DOES_NOT_EXIST: 'Currency info not found',
  INVALID_MODULE_PUBLISHER: 'Insufficient permissions to publish modules',
  NO_ACCOUNT_ROLE: 'Sending account has no role',
  BAD_CHAIN_ID: 'Incorrect chain ID',
  SEQUENCE_NUMBER_TOO_BIG: 'Sequence number too large',
  BAD_TRANSACTION_FEE_CURRENCY: 'Gas currency not registered',
  FEATURE_UNDER_GATING: 'Feature intended for future version',
  SECONDARY_KEYS_ADDRESSES_COUNT_MISMATCH: 'Mismatch in secondary signer addresses',
  SIGNERS_CONTAIN_DUPLICATES: 'Duplicate signers detected',
  SEQUENCE_NONCE_INVALID: 'Invalid sequence nonce',
  CHAIN_ACCOUNT_INFO_DOES_NOT_EXIST: 'Error accessing chain-specific account info',
  MODULE_ADDRESS_DOES_NOT_MATCH_SENDER: "Module address doesn't match sender",
  DUPLICATE_MODULE_NAME: 'Attempt to publish two modules with the same name',
  BACKWARD_INCOMPATIBLE_MODULE_UPDATE: 'Module update breaks compatibility',
  CYCLIC_MODULE_DEPENDENCY: 'Cyclic dependency in module update',
  RESOURCE_DOES_NOT_EXIST: 'Resource not found under the account',
  RESOURCE_ALREADY_EXISTS: 'Attempt to create an existing resource',
  UNKNOWN_STATUS: 'Unknown error',
}

export const getErrorMessage = (errorCode: string) => {
  return errorCoders[errorCode] || 'Something went wrong'
}
